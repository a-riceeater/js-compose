"use strict";const __JETPACK_WINDOW={};function throwJetpackError(e,t){return console.error(`Jetpack Error [Error Type ${t}]:\n${e}`),{type:"error",keyword:t}}function Modifier(){const e={__color:"",__fontSize:"",setColor:function(t){return this.__color=t,e},setSize:function(t){return this.__fontSize=t,e}};return console.log(e),e}function Text(e,t){return e?{type:"text",text:e,modifier:t}:throwJetpackError("Missing text content","undefined")}function __createTextElement(e,t){const r=document.createElement("p");r.innerText=e,console.log(t),Object.entries(t).forEach((([e,t])=>{"string"==typeof t&&(r.style[e.replace("__","")]=t)})),document.body.appendChild(r)}document.addEventListener("DOMContentLoaded",(e=>{try{onCreate(__JETPACK_WINDOW)}catch(e){console.error(e),throwJetpackError("onCreate function not found")}})),__JETPACK_WINDOW.setContent=function(e){if(console.log(e,typeof e.appTheme),!e.appTheme||0==e.appTheme.length)return throwJetpackError("No app theme provided");if("object"!=typeof e.appTheme)return throwJetpackError("Invalid app theme type. Type Array expected");for(let t=0;t<e.appTheme.length;t++){const r=e.appTheme[t];switch(console.log(r),r.type){case"error":return void throwJetpackError("Ended execution due to invalid element supplied.");case"text":__createTextElement(r.text,r.modifier)}}};